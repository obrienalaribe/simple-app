name: Build and Deploy to GKE

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  GKE_CLUSTER: paid-network-cluster   
  GKE_ZONE: europe-west1 
  DEPLOYMENT_NAME: simple-app
  IMAGE: simple-app

jobs:
  build-docker-image:
    name: Build & Publish Docker Image
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - name: Configure GCR
      run: |-
        gcloud --quiet auth configure-docker

    # Build the Docker image
    - name: Build Docker Image
      run: |-
        docker build \
          --tag "gcr.io/${{ secrets.PROJECT_ID }}/$IMAGE:$GITHUB_SHA"
          .

    # Push the Docker image to Google Container Registry
    - name: Publish Image to GCR
      run: |-
        docker push "gcr.io/${{ secrets.PROJECT_ID }}/$IMAGE:$GITHUB_SHA"
    
    - name: Checkout k8s CD manifest repo
      uses: actions/checkout@master
      with:
        repository: obrienalaribe/simple-app

    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    
#     Create k8s manifests for CD
    - name: Create k8s manifests
      run: |-
        sed -i -e "s/${IMAGE}:.*/${IMAGE}:${GITHUB_SHA}/g" k8s/base/deployment.yaml
        ./kustomize build ./k8s/overlays/prod/ > /tmp/k8s-manifests/${IMAGE}.yaml
        
#         cat k8s/base/deployment.yaml | kubectl apply -f -
#         kubectl rollout status deployment/$DEPLOYMENT_NAME
#         kubectl get services -o wide

    - name: Show k8s manifest
      run: |-
        cat /tmp/k8s-manifests/${IMAGE}.yaml
    
#     # Get the GKE credentials so we can deploy to the cluster
#     - name: Get GKE Credentials
#       uses: google-github-actions/get-gke-credentials@v0.2.1
#       with:
#         cluster_name: ${{ env.GKE_CLUSTER }}
#         location: ${{ env.GKE_ZONE }}
#         credentials: ${{ secrets.GKE_SA_KEY }}
    
