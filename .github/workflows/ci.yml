name: Build and Deploy to GKE

on:
  push:
    branches: ["*"]
  workflow_dispatch:

env:
  IMAGE_REGISTRY_PROJECT: mv-paid-images-d3d34

jobs:
  build-image:

    name: Build & Publish Docker Image
    runs-on: ubuntu-latest
  
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Compute Image Tag
      id: image
      run: |
        # use bash variable expression to get the substring
        export GIT_PR_SHA="${{ github.sha }}"
        export GIT_PR_SHA_SHORT="${GIT_PR_SHA:0:7}"

        echo "::set-output name=tag::${GIT_PR_SHA_SHORT}"
    outputs:
      image_tag: ${{ steps.image.outputs.tag }}

  trigger-deployment:
    name: Trigger Deployment
    runs-on: ubuntu-latest
    needs: [build-image]
    
    env:
      K8S_REPO_WORKSPACE: ${{ github.workspace }}/k8s-manifests

    steps:
    - name: Set Job Envs
      run: |
        echo "IMAGE_TAG=${{ needs.build-image.outputs.image_tag }}" >> $GITHUB_ENV
        echo "APP=$(basename ${{ github.repository }})" >> $GITHUB_ENV
        echo "K8S_REPO_WORKSPACE=${{ github.workspace }}/${APP}" >> $GITHUB_ENV
        echo "BRANCH=$(basename ${{ github.ref }})" >> $GITHUB_ENV
        
    - name: Checkout CD repo
      uses: actions/checkout@master
      with:
        repository: obrienalaribe/k8s-manifests
     
    - name: Create app subfolder
      run: |
        mkdir -p "${K8S_REPO_WORKSPACE}"
  
    - uses: convictional/trigger-workflow-and-wait@v1.3.0
      with:
        owner: obrienalaribe
        repo: k8s-manifests
        github_token: ${{ secrets.CD_REPO_TOKEN }}
        workflow_file_name: main.yml
        ref: main
        wait_interval: 5
        inputs: '{"version": "${IMAGE_TAG}"'
        propagate_failure: true
        trigger_workflow: true
        wait_workflow: true
        
#     - name: Update app version
#       run: |
#           git checkout -b $BRANCH  \
#           && echo "$IMAGE_TAG" > version \
#           && git add version 

#     - name: Setup tmate session
#       uses: mxschmitt/action-tmate@v3.6 
    
#     - name: Push changes
#       uses: actions-go/push@v1
#       with:
#         force: true
#         commit-message: "$APP version updated to $IMAGE_TAG" 
# #        token: ${{ secrets.CD_REPO_TOKEN }}

